---
const nav = [
  { href: "/", label: "HOME" },
  { href: "/menu", label: "MENU" },
  { href: "/gallery", label: "GALLERY" },
  { href: "/access", label: "ACCESS" },
  { href: "/faq", label: "FAQ" },
];
---

<button
  type="button"
  aria-expanded="false"
  aria-controls="menu"
  aria-label="メニューを開く"
  class="button js-hamburger-button"
>
  <span class="bar"></span>
  <span class="bar"></span>
  <span class="bar"></span>
</button>
<nav id="menu" aria-hidden="true" class="nav js-nav">
  <div class="overlay js-overlay"></div>

  <ul class="list js-list">
    {
      nav.map((item) => (
        <li class="item">
          <a class="item-link" href={item.href}>
            {item.label}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  .nav {
    display: none;

    @include mq(md) {
      display: none;
    }
  }

  nav.active {
    display: block;

    @include mq(md) {
      display: none;
    }
  }

  .overlay {
    opacity: 0;
    visibility: hidden;
    transition: all ease 0.2s;
  }

  .overlay.active {
    opacity: 1;
    visibility: visible;
    position: fixed;
    inset: 0;
    background: rgb(255 255 255 / 95%);
    transition: all ease 0.2s;
  }

  .button {
    display: flex;
    position: absolute;
    z-index: var(--header-z-index);
    justify-content: center;
    right: 16px;
    width: 36px;
    height: 24px;

    @include mq(md) {
      display: none;
    }
  }

  .bar {
    display: block;
    position: absolute;
    width: 100%;
    height: 2px;
    background: #202020;
    transition: all ease 0.2s;
  }

  .bar:nth-child(1) {
    top: 0;
  }

  .bar:nth-child(2) {
    top: 50%;
    transform: translateY(-50%);
  }

  .bar:nth-child(3) {
    bottom: 0;
  }

  .button.active .bar:nth-child(1) {
    top: 50%;
    transform: translateY(-50%);
    transform: rotate(45deg);
    transition: all ease 0.2s;
  }

  .button.active .bar:nth-child(2) {
    display: none;
  }

  .button.active .bar:nth-child(3) {
    top: 50%;
    transform: translateY(-50%);
    transform: rotate(-45deg);
    transition: all ease 0.2s;
  }

  .list {
    opacity: 0;
    visibility: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: fixed;
    inset: 0;
    gap: 16px;
    transition: all ease 0.2s;
  }

  .list.active {
    opacity: 1;
    visibility: visible;
    transition: all ease 0.2s;
  }

  .item {
    list-style-type: none;
  }

  .item-link {
    font-size: 24px;
    text-decoration: none;
    color: inherit;
  }
</style>

<script>
  const nav = document.querySelector(".js-nav");
  const overlay = document.querySelector(".js-overlay");
  const button = document.querySelector(".js-hamburger-button");
  const list = document.querySelector(".js-list");

  // メニューの状態を切り替える関数
  const toggleMenu = () => {
    nav?.classList.toggle("active");
    overlay?.classList.toggle("active");
    button?.classList.toggle("active");
    list?.classList.toggle("active");

    // aria-expanded属性を切り替える
    const isExpanded = button?.getAttribute("aria-expanded") === "true";
    button?.setAttribute("aria-expanded", isExpanded ? "false" : "true");

    // aria-label属性を切り替える
    const menuState = button?.getAttribute("aria-label") === "メニューを開く";
    button?.setAttribute(
      "aria-label",
      menuState ? "メニューを閉じる" : "メニューを開く",
    );

    // aria-hidden属性を切り替える
    const isHidden = nav?.getAttribute("aria-hidden") === "true";
    nav?.setAttribute("aria-hidden", isHidden ? "false" : "true");

    // bodyのoverflowを切り替える
    document.body.style.overflow =
      document.body.style.overflow === "hidden" ? "" : "hidden";
  };

  // クリックイベントリスナーを追加
  button?.addEventListener("click", toggleMenu);

  // キーダウンイベントリスナーを追加
  document.addEventListener("keydown", function (e) {
    if (e.key === "Escape") {
      toggleMenu();
    }
  });
</script>
